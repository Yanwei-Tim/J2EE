package com.neusoft.SchoolBus.vncs.dao.impl;

import java.util.List;

import org.springframework.jdbc.core.simple.ParameterizedBeanPropertyRowMapper;

import com.neusoft.SchoolBus.vncs.domain.Driver;
import com.neusoft.SchoolBus.vncs.domain.Route;
import com.neusoft.SchoolBus.vncs.domain.Sichen;
import com.neusoft.SchoolBus.vncs.domain.Site;
import com.neusoft.SchoolBus.vncs.domain.Student;
import com.neusoft.tag.dao.support.AbstractDaoManager;

public class QuartzDAO extends AbstractDaoManager{
    
	//线路基本信息
	@SuppressWarnings("unchecked")
	public List<Route> getRouteBaseInfo(String vin) throws Exception{
		String sql = "SELECT CXVT.VEHICLE_VIN,CXRT.ROUTE_ID,MAX(CXRT.ROUTE_NAME) ROUTE_NAME,NVL(MAX(CXSVT.SITECOUNT),0) SITECOUNT,NVL(MAX(CXVST.STUDENTCOUNT),0) STUDENTCOUNT,NVL(MAX(CXYDVT.DRIVERCOUNT),0) DRIVERCOUNT,NVL(MAX(CXSVTT.SICHENCOUNT),0) SICHENCOUNT,NVL(MAX(CXRTVS.UPSTARTTIME),'00:00:00') UPSTARTTIME,NVL(MAX(CXRTVS.UPENDTIME),'00:00:00') UPENDTIME,NVL(MAX(CXRTVS.DOWNSTARTTIME),'00:00:00') DOWNSTARTTIME,NVL(MAX(CXRTVS.DOWNENDTIME),'00:00:00') DOWNENDTIME " +
				"FROM CLW_XC_VSS_T CXVT,CLW_XC_ROUTE_T CXRT,CLW_XC_SITE_T CXST,(SELECT CXVT.VEHICLE_VIN,COUNT(1) SITECOUNT FROM CLW_XC_VSS_T CXVT,CLW_XC_SITE_T CXST WHERE CXST.SITE_ID=CXVT.SITE_ID GROUP BY CXVT.VEHICLE_VIN) CXSVT," +
				"(SELECT CXVT.VEHICLE_VIN,COUNT(1) STUDENTCOUNT FROM CLW_XC_VSS_T CXVT,CLW_XC_STUDENT_T CXST WHERE CXST.STU_ID=CXVT.STUDENT_ID GROUP BY CXVT.VEHICLE_VIN) CXVST," +
				"(SELECT CXVT.VEHICLE_VIN,COUNT(1) DRIVERCOUNT FROM CLW_YW_DRIVER_T CYDT,CLW_XC_VEHDRIVER_T CXVT WHERE CYDT.DRIVER_ID=CXVT.DRIVER_ID GROUP BY CXVT.VEHICLE_VIN) CXYDVT," +
				"(SELECT CXVT.VEHICLE_VIN,COUNT(1) SICHENCOUNT FROM CLW_XC_SICHEN_T CXST,CLW_XC_VEHSICHEN_T CXVT WHERE CXST.SICHEN_ID=CXVT.SICHEN_ID GROUP BY CXVT.VEHICLE_VIN) CXSVTT," +
				"(SELECT  CXVTIN.VEHICLE_VIN,CXVTIN.ROUTE_ID,MIN(CASE WHEN XR.CONTROL_STATION='0' AND TO_DATE(CXVTIN.PLAN_IN_TIME,'HH24:MI')> TO_DATE('00:30','HH24:MI') THEN TO_CHAR(TO_DATE(CXVTIN.PLAN_IN_TIME,'HH24:MI')-30/24/60,'HH24:MI:SS') WHEN XR.CONTROL_STATION='0' AND TO_DATE(CXVTIN.PLAN_IN_TIME,'HH24:MI')<= TO_DATE('00:30','HH24:MI') THEN '00:00:00' END) UPSTARTTIME," +
				"MAX(CASE WHEN XR.CONTROL_STATION='0' AND TO_DATE(CXVTIN.PLAN_OUT_TIME,'HH24:MI')< TO_DATE('23:30','HH24:MI') THEN TO_CHAR(TO_DATE(CXVTIN.PLAN_OUT_TIME,'HH24:MI')+30/24/60,'HH24:MI:SS') WHEN XR.CONTROL_STATION='0' AND TO_DATE(CXVTIN.PLAN_OUT_TIME,'HH24:MI')>= TO_DATE('23:30','HH24:MI') THEN '23:59:00' END) UPENDTIME," +
				"MIN(CASE WHEN XR.CONTROL_STATION='1' AND TO_DATE(CXVTIN.PLAN_IN_TIME,'HH24:MI')> TO_DATE('00:30','HH24:MI') THEN TO_CHAR(TO_DATE(CXVTIN.PLAN_IN_TIME,'HH24:MI')-30/24/60,'HH24:MI:SS') WHEN XR.CONTROL_STATION='1' AND TO_DATE(CXVTIN.PLAN_IN_TIME,'HH24:MI')<= TO_DATE('00:30','HH24:MI') THEN '00:00:00' END) DOWNSTARTTIME," +
				"MAX(CASE WHEN XR.CONTROL_STATION='1' AND TO_DATE(CXVTIN.PLAN_OUT_TIME,'HH24:MI')< TO_DATE('23:30','HH24:MI') THEN TO_CHAR(TO_DATE(CXVTIN.PLAN_OUT_TIME,'HH24:MI')+30/24/60,'HH24:MI:SS') WHEN XR.CONTROL_STATION='1' AND TO_DATE(CXVTIN.PLAN_OUT_TIME,'HH24:MI')>= TO_DATE('23:30','HH24:MI') THEN '23:59:00' END) DOWNENDTIME " +
				" FROM CLW_XC_SITE_T XR, CLW_XC_VSS_SITE_T CXVTIN WHERE XR.SITE_ID=CXVTIN.SITE_ID GROUP BY CXVTIN.VEHICLE_VIN,CXVTIN.ROUTE_ID) CXRTVS WHERE CXST.SITE_ID  =CXVT.SITE_ID" +
				" AND CXRT.ROUTE_ID=CXVT.ROUTE_ID AND CXVT.VEHICLE_VIN=CXSVT.VEHICLE_VIN(+) AND CXVT.VEHICLE_VIN=CXVST.VEHICLE_VIN(+) AND CXVT.VEHICLE_VIN=CXYDVT.VEHICLE_VIN(+) AND CXVT.VEHICLE_VIN=CXSVTT.VEHICLE_VIN(+) AND CXVT.VEHICLE_VIN=CXRTVS.VEHICLE_VIN AND CXRT.ROUTE_ID=CXRTVS.ROUTE_ID AND CXVT.VEHICLE_VIN=? GROUP BY CXVT.VEHICLE_VIN,CXRT.ROUTE_ID";
		return jdbcTemplate.query(sql, new Object[]{vin}, ParameterizedBeanPropertyRowMapper.newInstance(Route.class));
	}
	
	//站点基本信息
	@SuppressWarnings("unchecked")
	public List<Site> getSiteInfo(String vin) throws Exception{
		String sql = "SELECT SITE_ID,SITE_NAME,SICHEN_ADDR,SITE_LONGITUDE,SITE_LATITUDE,VSS_STATE,PLAN_IN_TIME,PLAN_OUT_TIME FROM (SELECT XR.SITE_ID," +
				"XS.SITE_NAME,XS.SICHEN_ADDR,XS.SITE_LONGITUDE,XS.SITE_LATITUDE,XR.SITE_UPDOWN AS VSS_STATE,CXVT.PLAN_IN_TIME," +
				"CASE WHEN substr(CXVT.PLAN_OUT_TIME, 0,instr(CXVT.PLAN_OUT_TIME, ':') - 1) < 10 THEN '0' || substr(CXVT.PLAN_OUT_TIME,0,instr(CXVT.PLAN_OUT_TIME, ':'))" +
				" ELSE substr(CXVT.PLAN_OUT_TIME,0,instr(CXVT.PLAN_OUT_TIME, ':')) END || CASE WHEN substr(CXVT.PLAN_OUT_TIME,instr(CXVT.PLAN_OUT_TIME, ':') + 1) < 10 THEN" +
				" '0' || substr(CXVT.PLAN_OUT_TIME,instr(CXVT.PLAN_OUT_TIME, ':') + 1) ELSE substr(CXVT.PLAN_OUT_TIME,instr(CXVT.PLAN_OUT_TIME, ':') + 1) END AS PLAN_OUT_TIME" +
				" FROM CLW_XC_ROUTESITE_T XR,CLW_XC_SITE_T      XS,CLW_XC_VSS_SITE_T  CXVT WHERE XR.SITE_ID = XS.SITE_ID AND XR.SITE_UPDOWN = '0'" +
				" AND XS.VALID_FLAG = '0' AND XR.ROUTE_ID = (select T.ROUTE_ID from clw_cl_base_info_t t WHERE T.VEHICLE_VIN = '"+vin+"' AND T.VALID_FLAG = '0')" +
				"  AND XR.ROUTE_ID = CXVT.ROUTE_ID  AND XR.SITE_ID = CXVT.SITE_ID AND CXVT.VEHICLE_VIN = '"+vin+"' ORDER BY XR.RS_ORDER)" +
				" UNION ALL" +
				" SELECT SITE_ID, SITE_NAME, SICHEN_ADDR, SITE_LONGITUDE, SITE_LATITUDE, VSS_STATE,PLAN_IN_TIME,PLAN_OUT_TIME FROM (SELECT XR.SITE_ID," +
				" XS.SITE_NAME, XS.SICHEN_ADDR, XS.SITE_LONGITUDE, XS.SITE_LATITUDE, XR.SITE_UPDOWN AS VSS_STATE, CXVT.PLAN_IN_TIME," +
				" CASE WHEN substr(CXVT.PLAN_OUT_TIME,0,instr(CXVT.PLAN_OUT_TIME, ':') - 1) < 10 THEN '0' || substr(CXVT.PLAN_OUT_TIME,0,instr(CXVT.PLAN_OUT_TIME, ':'))" +
				" ELSE substr(CXVT.PLAN_OUT_TIME, 0, instr(CXVT.PLAN_OUT_TIME, ':')) END || CASE WHEN substr(CXVT.PLAN_OUT_TIME, instr(CXVT.PLAN_OUT_TIME, ':') + 1) < 10 THEN  '0' || substr(CXVT.PLAN_OUT_TIME," +
				" instr(CXVT.PLAN_OUT_TIME, ':') + 1) ELSE substr(CXVT.PLAN_OUT_TIME, instr(CXVT.PLAN_OUT_TIME, ':') + 1) END AS PLAN_OUT_TIME" +
				" FROM CLW_XC_ROUTESITE_T XR, CLW_XC_SITE_T      XS, CLW_XC_VSS_SITE_T  CXVT WHERE XR.SITE_ID = XS.SITE_ID AND XR.SITE_UPDOWN = '1'" +
				" AND XS.VALID_FLAG = '0' AND XR.ROUTE_ID = (select T.ROUTE_ID from clw_cl_base_info_t t WHERE T.VEHICLE_VIN = '"+vin+"' AND T.VALID_FLAG = '0')" +
				" AND XR.ROUTE_ID = CXVT.ROUTE_ID AND XR.SITE_ID = CXVT.SITE_ID AND CXVT.VEHICLE_VIN = '"+vin+"' ORDER BY XR.RS_ORDER)";
		return jdbcTemplate.query(sql, ParameterizedBeanPropertyRowMapper.newInstance(Site.class));
	}
	
	//学生基本信息
	@SuppressWarnings("unchecked")
	public List<Student> getStudentInfo(String vin) throws Exception{
		String sql = "SELECT INFODATA.STU_NAME STU_NAME,INFODATA.STU_ID,INFODATA.STU_CARD_ID STU_CARD_ID," +
				"INFODATA.STU_SCHOOL STU_SCHOOL,INFODATA.STU_CLASS STU_CLASS,INFODATA.TEACHER_TEL TEACHER_TEL," +
				"INFODATA.RELATIVE_TEL RELATIVE_TEL,INFODATA.PHOTONAME PHOTONAME,INFODATA.GETONBUS GETONBUS," +
				"INFODATA.GETDOWNBUS GETDOWNBUS,PHOTODATA.STU_PHOTO STU_PHOTO FROM (SELECT MAX(CXST.STU_NAME) STU_NAME," +
				"CXST.STU_ID,MAX(CXST.STU_CARD_ID) STU_CARD_ID,MAX(CXST.STU_SCHOOL) STU_SCHOOL,MAX(CXST.STU_CLASS) STU_CLASS," +
				"MAX(CXST.TEACHER_TEL) TEACHER_TEL,MAX(CXST.RELATIVE_TEL) RELATIVE_TEL,MAX(CASE WHEN CXST.PHOTO_NAME IS NULL THEN NULL ELSE CXST.STU_CARD_ID||'_'||CXST.PHOTO_NAME END) PHOTONAME," +
				"WM_CONCAT(CASE WHEN VSS_STATE='0' THEN CXVT.SITE_ID END) GETONBUS," +
				"WM_CONCAT(CASE WHEN VSS_STATE='1' THEN CXVT.SITE_ID END) GETDOWNBUS FROM CLW_XC_VSS_T CXVT," +
				"CLW_XC_STUDENT_T CXST WHERE CXVT.STUDENT_ID=CXST.STU_ID AND CXVT.VEHICLE_VIN ='" +vin+"'"+
				" GROUP BY CXST.STU_ID) INFODATA,CLW_XC_STUDENT_T PHOTODATA WHERE INFODATA.STU_ID=PHOTODATA.STU_ID";
		return jdbcTemplate.query(sql, ParameterizedBeanPropertyRowMapper.newInstance(Student.class));
	}
	
	//驾驶员基本信息
	@SuppressWarnings("unchecked")
	public List<Driver> getDriverInfo(String vin) throws Exception{
		String sql = "SELECT CYDT.DRIVER_ID,CYDT.DRIVER_CARD_ID DRIVER_CARD_ID,CYDT.DRIVER_NAME DRIVER_NAME" +
				" FROM CLW_YW_DRIVER_T CYDT,CLW_XC_VEHDRIVER_T CXVT WHERE CYDT.DRIVER_ID=CXVT.DRIVER_ID" +
				" AND CXVT.VEHICLE_VIN='"+vin+"'";
		return jdbcTemplate.query(sql, ParameterizedBeanPropertyRowMapper.newInstance(Driver.class));
	}
	
	//司乘基本信息
	@SuppressWarnings("unchecked")
	public List<Sichen> getSichenInfo(String vin) throws Exception{
		String sql = "SELECT CXST.SICHEN_ID,CXST.SICHEN_CARD_ID SICHEN_CARD_ID,CXST.SICHEN_NAME SICHEN_NAME" +
				" FROM CLW_XC_SICHEN_T CXST,CLW_XC_VEHSICHEN_T CXVT WHERE CXST.SICHEN_ID=CXVT.SICHEN_ID" +
				" AND CXVT.VEHICLE_VIN='"+vin+"'";
		return jdbcTemplate.query(sql, ParameterizedBeanPropertyRowMapper.newInstance(Sichen.class));
	}
    //车辆基本信息
	@SuppressWarnings("unchecked")
	public List<String> getVehicleList() throws Exception{
		String sql = "select distinct vehicle_vin from CLW_XC_VSS_T";
		return jdbcTemplate.queryForList(sql, String.class);
	}
}
